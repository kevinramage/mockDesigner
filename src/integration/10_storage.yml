name: Storage
vars:
  host: "localhost"
  port: 7010
  output: generated_storage
testcases:

# Build mock
- name: BuildMockService
  steps:
  - type: exec
    script: npm run start -- --input mocks/code/examples/storage.yml --port {{.port}} --output {{.output}}
    assertions:
    - result.code ShouldEqual 0
  - type: exec
    script: docker-compose -f {{.output}}/docker-compose.yml up -d --force-recreate
  - type: exec
    script: ./wait {{.output}}_was_1
  - type: http
    method: GET
    url: "http://{{.host}}:{{.port}}/api/v1/storageService/_ping"
    assertions:
    - result.statuscode ShouldEqual 204
  
# Clean counter
- name: CleanCounter
  steps:
  - type: http
    method: DELETE
    url: "http://{{.host}}:{{.port}}/api/v1/_deleteDatabaseValue?name=commandCounter"
    assertions:
    - result.statuscode ShouldEqual 204

# Nominal case
- name: NominalCase
  steps:
  - type: http
    method: POST
    url: "http://{{.host}}:{{.port}}/api/v1/storageService"
    headers:
      Content-Type: application/json
    body: "{ \"name\": \"myCommand\", \"description\": \"A command description\" }"
    assertions:
    - result.statuscode ShouldEqual 200
    - result.bodyjson.id ShouldNotBeNil
    - result.bodyjson.name ShouldEqual "myCommand"
    - result.bodyjson.description ShouldEqual "A command description"